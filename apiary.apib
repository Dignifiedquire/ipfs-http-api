FORMAT: 1A

# ipfs

The API for interacting with IPFS nodes.


# Data Structures

## Hash (string)
An IPFS hash

# Group add

## Add [/add{?stream%2Dchannels}]

### Add a Single File [POST]
Add a file to IPFS returning the hash and name. The name
value will only be set if you are actually sending a file.

+ Parameters
    + stream%2Dchannels (optional, boolean) - Should the result be returned in a streaming manner.

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="image[file]"; filename="file.txt"
        Content-Type: text/plain
    
        hello world
        -----BOUNDARY

+ Response 201 (application/json)

  + Headers

            X-Chunked-Output: 1

  + Body

            {
                "Name": "file.txt",
                "Hash": "myhash"
            }


# Group bitswap
A set of commands to manipulate the bitswap agent

## stat [GET /bitswap/stat]
Show some diagnostic information on the bitswap agent

+ Response 201 (application/json)

    + Body
    
            {
              "ProvideBufLen": 0,
              "Wantlist": null,
              "Peers": [
                "QmNjRVohhWBX31EoaAXkrj5mPF9vQNcTVvQgWHNwdxweCN",
                "QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64"
              ],
              "BlocksReceived": 0,
              "DupBlksReceived": 0,
              "DupDataReceived": 0
            }

## unwant [GET /bitswap/unwant{?arg}]
Remove a given block from your wantlist

+ Parameters
    + arg (required Hash) 
    
        key to remove from your wantlist

+ Response 201 (application/json)


## wantlist [GET /bitswap/wantlist{?peer}]
Show blocks currently on the wantlist

+ Parameters
    + peer (optional Hash) 
    
        specify which peer to show wantlist for (default self)

+ Response 201 (application/json)

    + Body

            {
              "Keys": null
            }



