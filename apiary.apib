FORMAT: 1A

# ipfs

The API for interacting with IPFS nodes.

# Group add

TODO

# Group bitswap
A set of commands to manipulate the bitswap agent

## stat [GET /bitswap/stat]
Show some diagnostic information on the bitswap agent

+ Response 200 (application/json)

    + Attributes (object)
        + ProvideBufLen: 0 (number)
        + Wantlist (array, nullable)
        + Peers (array)
            - QmNjRVohhWBX31EoaAXkrj5mPF9vQNcTVvQgWHNwdxweCN (Hash)
        + BlocksReceived: 0 (number)
        + DupBlksReceived: 0 (number)
        + DupDataReceived: 0 (number)

## unwant [GET /bitswap/unwant{?arg}]
Remove a given block from your wantlist

+ Parameters
    + arg (Hash, required) - key to remove from your wantlist

+ Response 200 (application/json)


## wantlist [GET /bitswap/wantlist{?peer}]
Show blocks currently on the wantlist

+ Parameters
    + peer (Hash, optional)

        specify which peer to show wantlist for (default self)

+ Response 200 (application/json)

    + Attributes (object)
        + Keys (array, optional)


# Group block
A plumbing command used to manipulate raw ipfs blocks.

## stat [GET /block/stat?{arg}]
Retrieve information on a raw ipfs block.

+ Parameters
    + arg (Hash, required) - hash of the block to retrieve stats on

+ Response 200 (application/json)

    + Attributes (object)
        + Key: Qmb9Ru8XjPDAokAYE6rVzLwn3dEB4fxijgVMga1CcS95kJ (Hash)
        + Size: 262158 (number) - the size of the block in bytes

## get [GET /block/get?{arg}]

Store data as a raw ipfs block.

+ Parameters
    + arg (Hash, required) - hash of the block to be fetched

+ Response 200 (text/plain)

    + Body

        ```
        hello world
        ```

## put [GET /block/put]
TODO



# Data Structures

## Hash (string)
An IPFS hash

### Sample
QmNjRVohhWBX31EoaAXkrj5mPF9vQNcTVvQgWHNwdxweCN
